{
    "contents" : "#' # Regional Clustering\n#' ## Obiettivi della ricerca\n#' \n#' L'obiettivo del documento e' trovare un insieme di regioni europee che si ritengono essere strutturalmente simili alla Provincia Autonoma di Trento su cui poi potersi poi confrontare su  indicatori obiettivo.\n#' La metodologia proposta prevede la costruzione di cluster basati su indicatori \"strutturali\" ritenuti importanti e caratterizzanti della realta' provinciale.  \n#' Gli indicatori che si e' pensato rappresentativi della situazione demografica e economica regionale sono:\n#' * **Demografia**:\n#'   - Popolazione media\n#'   - Indice di vecchiaia\n#'   - Eta' media\n#'   - Superficie\n#' * **Economia**:\n#'   - Addetti nell'industria\n#'   - Addetti nei servizi\n#'   - Addetti totali\n#'   - Valore aggiunto totale\n#'   - Percentuale di valore aggiunto dall'agricoltura\n#'   - Percentuale di valore aggiunto dall'industria\n#'   - Percentuale di valore aggiunto dai servizi\n#'   - Occuapti totali\n#'   - Percentuale di occupati nell'agricoltura\n#'   - Percentuale di occupati nell'industria\n#'   - Percentuale di occupati nei servizi\n#' * **Istruzione**:\n#'   - NEET\n#'   - Percentuale di persone 25-64 con almeno diploma superiore\n#' * **Ricerca e innovazione**:\n#'   - Percentuale di occupati in settori ad alto contenuto tecnologico o ad alta intensita' di conoscenza  \n#'   \n#' Poiche' la procedura di clustering non puo' lavorare con i valori NULL sono costretto a eliminare tutte le righe in cui compare un NA. \n#' In partioclare gli indicatori riguardanti gli addetti sono mancanti su molte regioni e interi stati, particolarmente REGNO UNITO, GERMANIA e BELGIO. Delle 272 regioni europee ne rimarebbero utilizzabili solo 136.\n#' Considerata l'importanza di queste regioni ho ritenuto opportuno eliminare gli indicatori piuttosto che le righe.\n#' \n#' ## Risultati\n#' \n#' L'analisi ha portato a determinare un cluster di regioni europee caratterizzate da una dimensione medio-piccola, con popolazione pi√π bassa della media. I territori selezionati si contraddistinguono inoltre per una predominanza del settore terziario a scapito del settore industriale e agricolo. Molto piu' basso della media europea e' il numero di NEET\n\n#' ********\n#' # Metodologia\n#' ## Preparazione dataset\n#'\n#+ echo=FALSE, reults='hide', message=FALSE\nlibrary(dplyr)\nlibrary(cluster)\nlibrary(fpc)\nlibrary(rgl)\nlibrary(knitr)\nlibrary(xtable)\nlibrary(ggplot2)\nsource('RadialPlot.R')\n\nknit_hooks$set(\n    rgl = function(before, options, envir) {\n        if (!before) {\n            ## after a chunk has been evaluated\n            if (rgl.cur() == 0)\n                return()  # no active device\n            name = paste(options$fig.path, options$label, sep = '')\n            rgl.snapshot(paste(name, '.png', sep = ''), fmt = 'png')\n            return(paste('<img src=', name, '.png />', sep = ''))\n        }\n    }\n)\n\n#' Leggo i dati preparati da Paolo nel file 'LASTVALUE.csv'\nindOrig <-\n    read.csv2(\n        'LASTVALUE.csv', sep = ',', skip = 21, header = T, stringsAsFactors = F\n    )\n\n#' Il Dataset e' composto da 272 osservazioni su 18 variabili\n#+ echo=F, results='hide'\nindOrig <- select(indOrig, -contains('ADDIMP'), -contains('AGRI'))\nsummary(indOrig)\nindOrig <- na.omit(indOrig)\n\n#' Poiche' i valori fanno riferimento a fenomeni diversi tra loro standardizzo gli indicatori.\nind <- scale(indOrig[5:17])\nrow.names(ind) <- indOrig$GEO\n\n#' ***\n#' ## K-Medie\n\n#' Il metodo di clustering delle K-Medie e' il piu' utilizzato. Richiede che l'analista specifici il numero di cluster da estrarre. Un grafico della somma dei quadrati all'interno dei gruppi per il numero di cluster estratti puo' aiutare a scegliere il numero piu' appropriato di cluster. L'analista decide la numerosita' di cluster individuando il punto in cui l'aggiunta di un cluster (asse orizzontale) non comporta un significativo aumento dell'informazione (asse verticale).\n\n#' Tuttavia dopo approfondita analisi il metodo delle K-Medie non risulta adeguato nel caso specifico, in quanto i punti sono troppo ravvicinati tra loro, e non si conformano a dei cluster chiaramente separati, e quindi la procedura delle K-Medie non riesce a determinare i cluster in modo deterministico.\n#' Il grafico di seguito mostra la rappresentazione dei punti su uno spazio tridemnsionale utlizzando le prime tre componenti principali.\n\n#+ results='hide', echo=F\npcdf <- princomp(ind, cor = T, score = T) #Analisi componenti principali\nsummary(pcdf)\nopen3d(windowRect = c(50, 10, 1000, 1000))\nplot3d(\n    pcdf$scores, size = 1, type = 's', main = 'Grafico componenti principali'\n)\ntext3d(\n    pcdf$scores, texts = indOrig$GEO, cex = 0.8, adj = c(0.5, 2)\n)\n\n\n#+ fancy-rgl, rgl=T, echo=F\nrgl.viewpoint(\n    theta = 70, phi = 20, fov = 30, zoom = 0.8\n)\n\n#' ***\n#' ## Metodo gerarchico\n\n#' Si decide percio' di utilizzare un metodo di clustering gerarchico, che accoppia via via i punti piu' vicini nello spazio. Si rende pero' necessario decidere il tipo di distanza da utilizzare, il metodo di clusterizzazione e infine il numero di cluster.\n#' Si sceglie di utilizzare la distanza massima per minimizzare le differenze; si sceglie cioe' come distanza tra due punti il massimo tra le distanze di ogni dimensione\n#+ fig.width=15, fig.heigth=5\n# Matrice delle distanze\nd <- dist(ind, method = \"maximum\")\n# Crea l'albero\nfit <- hclust(d, method=\"ward.D2\") \n# Disegna il grafico\nplot(fit)\n# Divide l'albero all'altezza di 20 cluster\ngroup <- cutree(fit, k=20)\n# Disegna i rettangoli rossi attorno ai 20 cluster\nrect.hclust(fit, k=20, border=\"red\")\n\n#' ***\n#' ## Analisi dei cluster\n#' Trento (ITH2) risulta essere all'interno del cluster numero 1\n#+ echo=F\nindOrig <- data.frame(indOrig, group)\nind <- data.frame(ind, group)\nindOrig$group[indOrig$GEO=='ITH2']\ncluster <- filter(indOrig, group==indOrig$group[indOrig$GEO=='ITH2'])\n\n\n#' Il cluster 2 risulta essere cosi' composto:\n#+ echo=F, results='asis'\nprint(xtable(select(cluster, NUTS2=GEO, Denominazione=denoGEO, Stato=stato)), type='html', include.rownames = F)\n\navgs <- ind %>%\n    group_by(group) %>%\n    summarise_each(funs(mean))\n\navgs <- as.data.frame(avgs)\ncolnames(avgs) <- c('group', 'Popolazione media','Indice di vecchiaia', 'Eta\\' media', 'Superficie', 'Occupati totali', 'Valore aggiunto totale', '% Occupati industria', '% Occupati Servizi', '% Valore aggiunto industria', '% Valore aggiunto servizi', 'NEET', ' % Titolo superiore', '% Occupati alta tecnologia')\n\n\n#+ echo=F, results='asis'\nCreateRadialPlot(filter(avgs, group == 1), grid.min = -2, centre.y = -3, grid.max = 2, background.circle.colour = 'white', group.line.width = 1, group.point.size = 3, grid.line.width = 0.2, gridline.mid.colour = 'grey')\n\nCreateRadialPlot(filter(avgs, group %in% 2:6), grid.min = -2, centre.y = -3, grid.max = 2.5, background.circle.colour = 'white', group.line.width = 1, group.point.size = 3, grid.line.width = 0.2, gridline.mid.colour = 'grey')\n\nCreateRadialPlot(filter(avgs, group %in% 7:11), grid.min = -2, centre.y = -3, grid.max = 4, background.circle.colour = 'white', group.line.width = 1, group.point.size = 3, grid.line.width = 0.2, gridline.mid.colour = 'grey')\n\nCreateRadialPlot(filter(avgs, group %in% 12:15), grid.min = -3, centre.y = -5, grid.max = 10, background.circle.colour = 'white', group.line.width = 1, group.point.size = 3, grid.line.width = 0.2, gridline.mid.colour = 'grey')\n\n\n# create a new empty object called 'temp' in which to store a zip file\n# containing boundary data\ntemp <- tempfile(fileext = \".zip\")\n# now download the zip file from its location on the Eurostat website and\n# put it into the temp object\ndownload.file(\"http://ec.europa.eu/eurostat/cache/GISCO/geodatafiles/NUTS_2010_60M_SH.zip\", temp)\n# now unzip the boundary data\nunzip(temp)\n\nlibrary(rgdal)\nEU_NUTS <- readOGR(dsn = \"./NUTS_2010_60M_SH/data\", layer = \"NUTS_RG_60M_2010\")\nEU_NUTS <- spTransform(EU_NUTS, CRS(\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\"))\n\n\n\nToRemove <- EU_NUTS@data$STAT_LEVL!=2 | grepl('FR9',EU_NUTS@data$NUTS_ID)\nEU_NUTS <- EU_NUTS[!ToRemove,]\nplot(EU_NUTS)\nEU_NUTS@data = data.frame(EU_NUTS@data, indOrig[match(EU_NUTS@data$NUTS_ID, indOrig$GEO), ])\n\nEU_NUTS <- EU_NUTS[!is.na(EU_NUTS@data$group),]\n\nplot(EU_NUTS, col = rainbow(20)[EU_NUTS@data$group], add =T)\n#plot(EU_NUTS2, add = T)\n\nlegend(x = 3750000, y = 11800000, legend=unique(EU_NUTS@data$group), fill=rainbow(20)[unique(EU_NUTS@data$group)])\n\n",
    "created" : 1446637574628.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1760243872",
    "id" : "F6838BB3",
    "lastKnownWriteTime" : 1448378273,
    "path" : "~/RegionalClustering/ClusterAnalisys.R",
    "project_path" : "ClusterAnalisys.R",
    "properties" : {
        "notebook_format" : "pdf_document",
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}